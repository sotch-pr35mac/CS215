{\rtf1\ansi\ansicpg1252\cocoartf1331\cocoasubrtf120
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset136 STHeitiTC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Algorithms Notes (Part 3)\
\
2 main types of problems\
\
	1 optimization problems (max, min)\
		A. optimal solutions (There can be several optimal solutions)\
		B. Approximation solution (what can i do to get a good, but not perfect, solution)\
		
\f1 C\'a1\'43
\f0  Greedy Solutions\
			1. Principle
\f1  of optimality (Greedy algorithms for some)\
			2. Dynamic Programming (Chapter 15) will give us an optimal solutions, it may take literally forever to give it to you, but it will give it to you.\
			3. Linear Programming \
				A. no!\
			4. Brute Force (we will never learn this)\
				A. this method will always work, eventually\
			5. Random Guessing, (this is actually just bullshit)
\f0 \
	2 Decision problems (yes or no)\
\
\
Here is how to do a Greedy Solution\
	1. Sort the items by value\
	2. Choose item 1\
		C = 30, C2 = 10\
	3. value of solution is 40\
==> thats not the right answer, meaning that greedy algorithms don\'92t always give us the right answer\
\
Here is how to not do a Greedy solution i think i don\'92t really know whats going on\
	1. Sort by price density,\
		C = 30, C2 = 10\
	2. Choose ten pounds of the silver\
\
Charnge for $100 usd\
\
H, Q, D, N ,P\
start\
if c >= 50\
	add 1 to H\
	sub c - 50\
	loop back to start\
if c >= 25\
	add 1 to Q\
	sub 25 from c\
	loop around\
if c >= 10 \
	add 1 to D\
	sub c - 10\
	loop\
\
\
Huffman codes, encoding and encryption}